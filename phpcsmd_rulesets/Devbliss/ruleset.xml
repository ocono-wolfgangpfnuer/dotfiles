<?xml version="1.0"?>
<ruleset name="Devbliss">
 <description>The Devbliss coding standard ruleset definition for PHP CodeSniffer.</description>

 <!-- Include some sniffs from Generic standard -->
 <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
 <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
 <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
 <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
 <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
 <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
 <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
 <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
 <rule ref="Generic.ControlStructures.InlineControlStructure"/>
 <rule ref="Generic.Files.ByteOrderMark"/>
 <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
 <rule ref="Generic.Formatting.SpaceAfterCast"/>
 <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
 <rule ref="Generic.NamingConventions.ConstructorName"/>
 <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
 <rule ref="Generic.PHP.DeprecatedFunctions"/>
 <rule ref="Generic.PHP.DisallowShortOpenTag"/>
 <rule ref="Generic.Strings.UnnecessaryStringConcat"/>
 <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
 <rule ref="Generic.WhiteSpace.ScopeIndent"/>

 <!-- Include some sniffs from PEAR standard -->
 <rule ref="PEAR.ControlStructures.MultiLineCondition"/>
 <rule ref="PEAR.Files.IncludingFile"/>
 <rule ref="PEAR.Formatting.MultiLineAssignment"/>
 <rule ref="PEAR.Classes.ClassDeclaration"/>
 <rule ref="PEAR.Functions.FunctionDeclaration"/>
 <rule ref="PEAR.Commenting.InlineComment"/>

 <!-- Include some sniffs from Squiz standard -->
 <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
 <rule ref="Squiz.Functions.GlobalFunction"/>
 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing"/>
 <rule ref="Squiz.Classes.SelfMemberReference"/>
 <rule ref="Squiz.ControlStructures.ControlSignature"/>
 <rule ref="Squiz.ControlStructures.ElseIfDeclaration"/>
 <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
 <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
 <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
 <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
 <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
 <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

 <!-- Include some sniffs from PSR2 standard -->
 <rule ref="PSR2.Classes.PropertyDeclaration"/>
 <rule ref="PSR2.Namespaces.UseDeclaration"/>
 <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>

 <!--rule ref="Squiz.Arrays.ArrayDeclaration"/ -->

 <!-- Lines can be 120 chars long, but never show errors -->
 <rule ref="Generic.Files.LineLength">
  <properties>
   <property name="lineLimit" value="120"/>
   <property name="absoluteLineLimit" value="0"/>
  </properties>
 </rule>


 <!-- Use Unix newlines -->
 <rule ref="Generic.Files.LineEndings">
  <properties>
   <property name="eolChar" value="\n"/>
  </properties>
 </rule>


 <!-- Have 8 chars padding maximum and always show as errors  -->
 <rule ref="Generic.Formatting.MultipleStatementAlignment">
  <properties>
   <property name="maxPadding" value="8"/>
   <property name="ignoreMultiLine" value="true"/>
   <property name="error" value="true"/>
  </properties>
 </rule>

 <!-- Tweaks to metrics -->
 <rule ref="Generic.Metrics.CyclomaticComplexity">
  <properties>
   <property name="complexity" value="10"/>
   <property name="absoluteComplexity" value="100"/>
  </properties>
 </rule>
 <rule ref="Generic.Metrics.NestingLevel">
  <properties>
   <property name="nestingLevel" value="5"/>
   <property name="absoluteNestingLevel" value="50"/>
  </properties>
 </rule>

 <!-- Only one argument per line in multi-line function calls -->
 <rule ref="PEAR.Functions.FunctionCallSignature">
  <properties>
   <property name="allowMultipleArguments" value="false"/>
  </properties>
 </rule>

</ruleset>
